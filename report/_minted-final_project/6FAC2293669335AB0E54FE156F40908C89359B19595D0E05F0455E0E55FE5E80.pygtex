\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+cm}{/**}
\PYG{c+cm}{ * @file keypad.h}
\PYG{c+cm}{ * @author John McAvoy}
\PYG{c+cm}{ * @date 11 Dec 2018}
\PYG{c+cm}{ * @desc provides functions related to reading the keypad inputs}
\PYG{c+cm}{ */}

\PYG{c+cp}{\PYGZsh{}ifndef KEYPAD\PYGZus{}H}
\PYG{c+cp}{\PYGZsh{}define KEYPAD\PYGZus{}H}

\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}msp430.h\PYGZgt{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZdq{}Key.h\PYGZdq{}}

\PYG{c+cp}{\PYGZsh{}define A0 ( 1 \PYGZlt{}\PYGZlt{} 0 ) }\PYG{c+c1}{// P1.0}
\PYG{c+cp}{\PYGZsh{}define A1 ( 1 \PYGZlt{}\PYGZlt{} 3 ) }\PYG{c+c1}{// P1.3}
\PYG{c+cp}{\PYGZsh{}define A2 ( 1 \PYGZlt{}\PYGZlt{} 4 ) }\PYG{c+c1}{// P1.4}
\PYG{c+cp}{\PYGZsh{}define A3 ( 1 \PYGZlt{}\PYGZlt{} 5 ) }\PYG{c+c1}{// P1.5}
\PYG{c+cp}{\PYGZsh{}define A9 ( 1 \PYGZlt{}\PYGZlt{} 7 ) }\PYG{c+c1}{// P1.7}

\PYG{c+cp}{\PYGZsh{}define A4 ( 1 \PYGZlt{}\PYGZlt{} 0 ) }\PYG{c+c1}{// P2.0}
\PYG{c+cp}{\PYGZsh{}define A5 ( 1 \PYGZlt{}\PYGZlt{} 2 ) }\PYG{c+c1}{// P2.1}
\PYG{c+cp}{\PYGZsh{}define A6 ( 1 \PYGZlt{}\PYGZlt{} 1 ) }\PYG{c+c1}{// P2.2}
\PYG{c+cp}{\PYGZsh{}define A7 ( 1 \PYGZlt{}\PYGZlt{} 6 ) }\PYG{c+c1}{// P2.6}
\PYG{c+cp}{\PYGZsh{}define A8 ( 1 \PYGZlt{}\PYGZlt{} 7 ) }\PYG{c+c1}{// P2.7}

\PYG{c+cp}{\PYGZsh{}define P1KEYS ( A0 | A1 | A2 | A3 | A9 )}
\PYG{c+cp}{\PYGZsh{}define P2KEYS ( A4 | A5 | A6 | A7 | A8 )}
\PYG{c+cm}{/**}
\PYG{c+cm}{ * @func setup\PYGZus{}keypad\PYGZus{}pins}
\PYG{c+cm}{ * @desc initializes the appropriate I/O pins for reading the keypad}
\PYG{c+cm}{ */}
\PYG{k+kt}{void} \PYG{n+nf}{setup\PYGZus{}keypad\PYGZus{}pins}\PYG{p}{();}

\PYG{c+cm}{/**}
\PYG{c+cm}{ * @func clear\PYGZus{}key\PYGZus{}interupt\PYGZus{}flags}
\PYG{c+cm}{ * @desc clears keypad port interrupt flags}
\PYG{c+cm}{ */}
\PYG{k+kt}{void} \PYG{n+nf}{clear\PYGZus{}key\PYGZus{}interupt\PYGZus{}flags}\PYG{p}{();}


\PYG{c+cm}{/**}
\PYG{c+cm}{ * @func get\PYGZus{}key\PYGZus{}pressed}
\PYG{c+cm}{ * @desc determines the pressed key based on A3..A0 pins}
\PYG{c+cm}{ * @returns Key enum corresponding to the key pressed}
\PYG{c+cm}{ */}
\PYG{n}{Key} \PYG{n+nf}{get\PYGZus{}key\PYGZus{}pressed}\PYG{p}{();}

\PYG{c+cm}{/**}
\PYG{c+cm}{ * @func handle\PYGZus{}key\PYGZus{}press}
\PYG{c+cm}{ * @desc handles reading the combination endetered}
\PYG{c+cm}{ */}
\PYG{k+kt}{void} \PYG{n+nf}{handle\PYGZus{}key\PYGZus{}press}\PYG{p}{();}

\PYG{c+cm}{/**}
\PYG{c+cm}{ * @func send\PYGZus{}combination\PYGZus{}in}
\PYG{c+cm}{ * @desc sends current combination enter via uart}
\PYG{c+cm}{ */}
\PYG{k+kt}{void} \PYG{n+nf}{send\PYGZus{}combination\PYGZus{}in}\PYG{p}{();}
\PYG{c+cp}{\PYGZsh{}endif }\PYG{c+c1}{// KEYPAD\PYGZus{}H}
\end{Verbatim}
